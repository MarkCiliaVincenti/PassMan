// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PasswordManager.Infrastructure.Persistence;

#nullable disable

namespace PasswordManager.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PasswordManager.Domain.Entities.LoginActivities", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("insertDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("insertdate");

                    b.Property<string>("ip")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ip");

                    b.Property<string>("machineName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("machinename");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_dbloginactivities");

                    b.ToTable("dbloginactivities", (string)null);
                });

            modelBuilder.Entity("PasswordManager.Domain.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("firstname");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("lastname");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.Property<DateTime>("insertDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("insertdate");

                    b.HasKey("Id")
                        .HasName("pk_dbusers");

                    b.ToTable("dbusers", (string)null);
                });

            modelBuilder.Entity("PasswordManager.Domain.Entities.UserCred", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<byte[]>("cred")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("cred");

                    b.Property<DateTime>("insertDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("insertdate");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_dbusercred");

                    b.ToTable("dbusercred", (string)null);
                });

            modelBuilder.Entity("PasswordManager.Domain.Entities.UserCredHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<byte[]>("cred")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("cred");

                    b.Property<DateTime>("effectiveDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("effectivedate");

                    b.Property<DateTime>("insertDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("insertdate");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_dbusercredhistory");

                    b.ToTable("dbusercredhistory", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
